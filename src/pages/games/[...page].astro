---
import Layout from "~/layouts/PageLayoutNoBG.astro";
import { Pagination } from "accessible-astro-components";
import Headline from '~/components/blog/Headline.astro';
import { GAME } from '~/config.mjs';
import Game from "~/components/Game.astro";
import { getCollection } from 'astro:content';
export async function getStaticPaths({ paginate }) {
    let allGames = await getCollection('games');
// allGames = allGames.sort(    (a, b) => new Date(b.data.publish_date).valueOf() - new Date(a.data.publish_date).valueOf()
// );

  return paginate(allGames, {
    pageSize: GAME.postsPerPage,
  });
}

const { page } = Astro.props;
const meta = {
  title: "Games",
  description: "I create and edit roleplay and board games and everything in-between.",
  // canonical: post.canonical || url,
  // image: await findImage(post.image),
  // noindex: BLOG?.post?.noindex,
  // ogType: 'article',
};
---
<Layout {meta}>
    <section class="px-6 sm:px-6 py-6 sm:py-6 lg:py-6 mx-auto max-w-4xl">
      <Headline
        subtitle={meta.description}
      >
        {meta.title}
      </Headline>
    <ul>
      {
        page.data.map((game) => (
        <li class="mb-12 md:mb-20">
          <Game
          game={game}
            />
        </li>
        ))
      }
    </ul>
    <Pagination
      firstPage={page.url.prev ? "/games" : null}
      previousPage={page.url.prev ? page.url.prev : null}
      nextPage={page.url.next ? page.url.next : null}
      lastPage={page.url.next
        ? `/games/${Math.round(page.total / page.size)}`
        : null}
      currentPage={page.currentPage}
      totalPages={Math.round(page.total / page.size)}
    />
</section>
</Layout>