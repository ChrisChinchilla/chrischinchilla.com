---
import MarkdownPostLayout from "../../layouts/MarkdownLayout.astro";
import Podcast from '../../components/Podcast.astro';
import { XMLParser } from 'fast-xml-parser';

export async function getStaticPaths() {
  function slugify(str)
{
    str = str.replace(/^\s+|\s+$/g, '');

    // Make the string lowercase
    str = str.toLowerCase();

    // Remove accents, swap ñ for n, etc
    var from = "ÁÄÂÀÃÅČÇĆĎÉĚËÈÊẼĔȆÍÌÎÏŇÑÓÖÒÔÕØŘŔŠŤÚŮÜÙÛÝŸŽáäâàãåčçćďéěëèêẽĕȇíìîïňñóöòôõøðřŕšťúůüùûýÿžþÞĐđßÆa·/_,:;";
    var to   = "AAAAAACCCDEEEEEEEEIIIINNOOOOOORRSTUUUUUYYZaaaaaacccdeeeeeeeeiiiinnooooooorrstuuuuuyyzbBDdBAa------";
    for (var i=0, l=from.length ; i<l ; i++) {
        str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));
    }

    // Remove invalid chars
    str = str.replace(/[^a-z0-9 -]/g, '') 
    // Collapse whitespace and replace by -
    .replace(/\s+/g, '-') 
    // Collapse dashes
    .replace(/-+/g, '-'); 

    return str;
}

  const options = {
    ignoreAttributes: false,
    stopNodes: ["root.itunes:title"],
    attributeNamePrefix: 'att_',
    removeNSPrefix: true
  };
  const parser = new XMLParser(options);
  const feedTest = await fetch('https://feeds.zencastr.com/f/h5h0nhAi.rss');
  let rssFeedData = await feedTest.text();
  let parsedFeed = await parser.parse(rssFeedData);
  const allEpisodes = parsedFeed.rss.channel.item;
  return allEpisodes.map((episode) => {
return {
  params: {id: slugify(episode.title[0])},
  props: {episode},
};
  });
  // return paginate(allEpisodes, { pageSize: 25 });
}
const { episode } = Astro.props;
const {id} = Astro.params;

const meta = {
  title: 'Podcasts',
  description:
    'My pre-eminent podcast, Chinchilla Squeaks, has run for nearly eight years and taken me all over the globe. I have dabbled in other shows. They will be listed here again in the near future.',
  // canonical: post.canonical || url,
  // image: await findImage(post.image),
  // noindex: BLOG?.post?.noindex,
  // ogType: 'article',
};
---

<MarkdownPostLayout frontmatter={episode}>

<Podcast
                name={episode.title}
                description={episode.description}
                audio_preview_url={episode.enclosure.att_url}
                image={episode.image.att_href}
              />

  </section>
</MarkdownPostLayout>