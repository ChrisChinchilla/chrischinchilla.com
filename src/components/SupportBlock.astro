---
import { getCollection } from 'astro:content';
import { Image } from 'astro:assets';

const allSupportLinks = await getCollection('supportLinks');
const shuffled = allSupportLinks.sort(() => 0.5 - Math.random());
const randomSupportLinks = shuffled.slice(0, 2);
---

<section class={`grid gap-6 sm:grid-cols-1 md:grid-cols-2 my-12 dark:text-white items-stretch`}>
  <!-- TODO: Streamline -->
  <!-- TODO: Consolidate -->
  <div class="flex flex-col col-span-2 p-6 bg-white/70 dark:bg-slate-900 transition">
    <h2>If you like what you're reading, support my work</h2>
  </div>
  {
    randomSupportLinks.map((supportLink) =>
      supportLink.data.section === 'core' ? (
        <div class="flex flex-col p-6 bg-white/70 dark:bg-slate-900 rounded drop-shadow-lg hover:shadow-md transition border border-transparent dark:border-slate-800">
          <Fragment set:html={supportLink.data.affiliate_html}>
            <>
              <h3>{supportLink.data.name}</h3>
            </>
          </Fragment>
        </div>
      ) : (
        <div class="relative flex flex-col p-6 bg-white/70 dark:bg-slate-900 rounded drop-shadow-lg hover:shadow-md transition border border-transparent dark:border-slate-800">
          <div class="flex items-center">
            <Image
              src={supportLink.data.image ? supportLink.data.image : defaultPostImage}
              alt="test"
              class="object-contain mb-6 w-1/3 rounded drop-shadow-lg"
            />
            <div class="ml-4 text-xl font-bold">{supportLink.data.title}</div>
          </div>
          {supportLink.data.description && (
            <p class="text-gray-600 dark:text-gray-400 text-md mt-4 mb-8" set:html={supportLink.data.description} />
          )}
          <a href={supportLink.data.affiliate_link} class="btn btn-primary font-btn sm:mb-0 w-full">
            {supportLink.data.cta}
          </a>
        </div>
      )
    )
  }
</section>
