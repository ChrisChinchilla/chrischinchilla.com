---
import { Picture } from '@astrojs/image/components';
import { Debug } from 'astro/components';
import { findImage } from '~/utils/images';
import { Markdown } from '@astropub/md';
import truncateMarkdown from 'markdown-truncate';
import type { CollectionEntry } from 'astro:content';
interface Props {
  post: CollectionEntry<'posts'>;
}
// TODO: Fix link
// export interface Props {
//   slug: string;
//   title: string;
//   date: string;
//   publication_url?: string;
//   image: string;
//   body: string;
// }

const { post } = Astro.props;
// const { Content } = await post.render();
const featured_image = await findImage(post.data.image);

// Format date
// TODO: Method
var rawDate = new Date(post.data.publishDate);
var formattedDate = rawDate.toLocaleString('en-GB', {
  dateStyle: 'short',
  timeZone: 'UTC',
});

// What sort of URL
var url = '';
if (post.data.publication_url != null) {
  url = post.data.publication_url;
} else {
  url = '/blog/' + post.slug;
}
// TODO: Why is slug broken again?
// Truncate text
// TODO: Better way?
// TODO: Make to helper or plugin
// var truncatedText = body.split("</p>");

const truncatedBody = truncateMarkdown(post.body, {
  limit: 500,
  ellipsis: true,
});
---

<article class={`max-w-md mx-auto md:max-w-none grid gap-6 md:gap-8 ${post.data.image ? 'md:grid-cols-2' : ''}`}>
  <div
    class="relative h-0 pb-[56.25%] md:pb-[75%] lg:pb-[56.25%] overflow-hidden bg-gray-400 dark:bg-slate-700 rounded shadow-lg"
  >
    <Picture
      src={featured_image ? featured_image : '~/assets/images/default.png'}
      class="absolute inset-0 object-cover w-full h-full mb-6 rounded shadow-lg bg-gray-400 dark:bg-slate-700"
      widths={[400, 900]}
      sizes="(max-width: 900px) 400px, 900px"
      alt={post.data.title}
      aspectRatio="16:9"
      loading="lazy"
      decoding="async"
      fetchpriority="auto"
    />
  </div>

  <div class="mt-2">
    <header>
      <h2 class="text-xl sm:text-2xl font-bold leading-tight mb-2 font-heading dark:text-slate-300">
        {
          url ? (
            <a
              class="hover:text-primary dark:hover:text-blue-700 transition ease-in duration-200"
              href={url}
              rel="canonical"
            >
              {post.data.title}
            </a>
          ) : (
            post.data.title
          )
        }
      </h2>
      <i class="my-2 block">{formattedDate}</i>
    </header>
    <!-- TODO: Seems kind of ridiculous -->
    <div class="post-body body">
      <Markdown of={truncatedBody} />
    </div>
  </div>
</article>
