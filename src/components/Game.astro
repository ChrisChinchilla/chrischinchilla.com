---
import { Image } from 'astro:assets';
// import { findImage } from '~/utils/images';
import { type CollectionEntry } from 'astro:content';
import Markdown from '@astrojs/markdown-component';
import truncateMarkdown from 'markdown-truncate';

export interface Props {
  game: CollectionEntry<'games'>;
}
const { game } = Astro.props;

// const { Content } = await game.render();
// const featured_image = await findImage(game.data.image);

// Truncate text
// TODO: Better way?
// TODO: Make to helper or plugin
// var truncatedText = body.split("</p>");

const truncatedBody = truncateMarkdown(game.body, {
  limit: 500,
  ellipsis: true,
});

// What sort of URL
var url = 'games/' + game.slug;
// TODO: Why is slug broken again?
---

<article class={`max-w-md mx-auto md:max-w-none grid gap-6 md:gap-8 ${game.data.image ? 'md:grid-cols-2' : ''}`}>
  <div class="relative h-0 pb-[56.25%] md:pb-[75%] lg:pb-[56.25%] overflow-hiddenrounded drop-shadow-lg">
    <!-- <Picture
      src={featured_image ? featured_image : '~/assets/images/default.png'}
      class="absolute inset-0 object-cover w-full h-full mb-6 rounded drop-shadow-lg"
      widths={[450, 900]}
      sizes="(max-width: 900px) 450px, 900px"
      alt={game.data.title}
      aspectRatio="16:9"
      loading="lazy"
      decoding="async"
      fetchpriority="auto"
    /> -->
    <Image
      src={game.data.image}
      alt={game.data.title}
      class="absolute object-contain h-full mb-6 rounded drop-shadow-lg"
    />
  </div>

  <div class="mt-2">
    <header>
      <h2 class="text-xl sm:text-2xl font-semibold leading-tight mb-2 font-subheading dark:text-slate-300">
        {
          url ? (
            <a class="hover:text-primary dark:hover:text-blue-700 transition ease-in duration-200" href={url}>
              {game.data.title}
            </a>
          ) : (
            game.data.title
          )
        }
      </h2>
      <i class="my-2 block">{game.data.role}</i>
    </header>
    <!-- TODO: Seems kind of ridiculous -->
    <!-- TODO: Deprecated, need an alternative -->
    <Markdown class="m-2" />{truncatedBody}
  </div>
</article>
